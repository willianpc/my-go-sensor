name: Go Tracer Release

on:
  workflow_dispatch:
    secrets:
      GITHUB_TOKEN:
        description: 'Github Token'
    inputs:
      packageName:
        description: 'Example: instagorm, instaredis/v2. Use "." to release the core module'
        required: true
        default: '.'
        type: string
      versionType:
        description: 'The version to be released: major, minor or patch'
        required: true
        default: 'patch'
        type: choice
        options:
        - major
        - minor
        - patch
      asDraft:
        description: 'Release as draft?'
        required: true
        default: true
        type: boolean

jobs:
  do_release:
    name: Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      name: Checkout repo
      with:
        fetch-depth: 0
    - name: Release tracer or package
      id: releaser
      run: ./release_action.sh
      shell: bash {0}
      env:
        INSTANA_PACKAGE_NAME: ${{ inputs.packageName }}
        LIB_VERSION_TYPE: ${{ inputs.versionType }}
        RELEASE_AS_DRAFT: ${{ inputs.asDraft }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Post on Slack
      if: "${{ success() && !inputs.asDraft }}"
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: ${{ secrets.SLACK_RELEASE_CHANNEL_ID }}
        payload: |
          {
            "text": ":mega: *Go Tracer team* : Version ${{ steps.releaser.outputs.RELEASE_VERSION }} of ${{ steps.releaser.outputs.RELEASE_PACKAGE }} :package: has been released.",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":mega: *Go Tracer team* : Version ${{ steps.releaser.outputs.RELEASE_VERSION }} of ${{ steps.releaser.outputs.RELEASE_PACKAGE }} :package: has been released."
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*URL:* <${{ github.event.release.html_url }}|${{ github.event.release.html_url }}>"
                }
              }
            ]
          }
      env:
        INSTANA_PACKAGE_NAME: ${{ inputs.packageName }}
        LIB_VERSION_TYPE: ${{ inputs.versionType }}
        RELEASE_AS_DRAFT: ${{ inputs.asDraft }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        SLACK_RELEASE_CHANNEL_ID: ${{ secrets.SLACK_RELEASE_CHANNEL_ID }}

    - name: Update pkg.go.dev
      if: "${{ !inputs.asDraft }}"
      run: |
        echo "checking go version, as it seems to be there already"
        go version
